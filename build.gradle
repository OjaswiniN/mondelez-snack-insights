plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.diffplug.spotless' version '6.18.0'
}

group 'com.insights.mondelezinternational'
version '1.0-SNAPSHOT'


java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /*SPRING*/
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    /*DATABASE*/
    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'org.jdbi:jdbi3-spring4:3.19.0'
    implementation 'org.jdbi:jdbi3-sqlobject:3.37.1'
    implementation 'org.jdbi:jdbi3-postgres:3.37.1'
    implementation 'org.jdbi:jdbi3-jackson2:3.37.1'
    implementation 'org.jdbi:jdbi3-stringtemplate4:3.37.1'
    implementation 'org.flywaydb:flyway-core:9.16.0'
    /*LOMBOK*/
    implementation 'org.projectlombok:lombok:1.18.26'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    /*OTHERS*/
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder() // Use the default importOrder configuration
        removeUnusedImports() // Removes Unused imports
        cleanthat()	// Cleanthat will refactor your code, but it may break your style: apply it before your formatter
        googleJavaFormat()	// has its own section below
        formatAnnotations()  // fixes formatting of type annotations, see below
        licenseHeader '/* (C) $YEAR Mondelez Insights */' // or licenseHeaderFile
    }
}